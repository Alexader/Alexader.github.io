---
layout: post
title:  "Signature in blockchain!"
date:   2022-01-01 16:12:04 +0800
categories: blokchain
---

## 什么是ECDSA？

ECDSA是基于ECC（椭圆曲线）的一种签名方案

## 解决了什么问题？

是签名算法中很常用的一种，比较较早的DSA签名来说，更加安全。因为ECDSA的安全性是建立在椭圆曲线离散对数问题上的，DSA的是在离散对数问题。而椭圆曲线离散对数问题远比离散对数更难。

## 有什么技术上的出彩之处？

相比RSA技术来说，有很多好处，比如使用更短的比特能达到和RSA相同的安全等级。这样带来的好处还有计算速度更快，传输效率和存储方面都带来了好处。

## ECDSA技术细节

签名过程如下：
1. 选择一条椭圆曲线 $Ep(a,b)$，和基点G；
2. 选择私有密钥k（k<n，n为G的阶），利用基点G计算公开密钥K=kG；
3. 产生一个随机整数r（r<n），计算点R=rG；
4. 将原数据和点R的坐标值x,y作为参数，计算SHA1做为hash，即Hash=SHA(原数据,x,y)；
5. 计算s≡r - Hash * k (mod n)
6. r和s做为签名值，如果r和s其中一个为0，重新从第3步开始执行

验证过程如下：
1. 接受方在收到消息(m)和签名值(r,s)后，进行以下运算
2. 计算：sG+H(m)P=(x1,y1), r1≡ x1 mod p。
3. 验证等式：r1 ≡ r mod p。
4. 如果等式成立，接受签名，否则签名无效。


## 存在的问题

ECC 用作签名的时候，会引入一个随机数K，这样会造成同一个私钥对同一个消息签名，每次得到的结果也是不一样的。

这在比特币这种场景下没啥关系，因为就是对交易区块做一次签名而已；

但是如果是用签名结果**来决定某些东西，或者作为其他函数的输入**，就会存在问题，这样某个人就可以通过多次签名来选取其中一个对自己更有好处的签名结果。这种情况下可以使用BLS签名方案。